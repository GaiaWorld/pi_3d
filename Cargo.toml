[package]
name = "pi_3d"
version = "0.0.8"
authors = ["baip0002 <2494156981@qq.com>"]
edition = "2021"
description = "3D Framework for Scene."
repository = "https://github.com/GaiaWorld/pi_3d"
license = "MIT OR Apache-2.0"
keywords = ["3d scene"]
crate-type = ["dylib"]

[workspace]
members = ["crates/*"]

[profile.release]
debug = false
# strip = true
# lto = true #这为LLVM提供了更多内联和修剪功能的机会。它不仅使.wasm尺寸更小，而且在运行时也更快！缺点是编译将花费更长的时间
opt-level = 'z'  # 默认情况下，对LLVM的优化通道进行了调整，以提高速度，而不是大小。我们可以通过修改以下
# opt-level = "z" # 了更积极地优化尺寸，以进一步的潜在速度成本
# 请注意，令人惊讶的是，opt-level = "s"有时二进制文件的大小可能小于opt-level = "z"。总是测量！
panic = 'abort'
codegen-units = 1
# dwarf-debug-info = true
# split-debuginfo = '...'  # Platform-specific.
# strip = "none"
debug-assertions = false
overflow-checks = false
lto = true
incremental = false
rpath = false

[dependencies]
pi_scene_context        = { version = "0.0.*", registry = "yn", path = "crates/pi_scene_context" }
pi_scene_shell          = { version = "0.0.*", registry = "yn", path = "crates/pi_scene_shell" }
pi_mesh_builder         = { version = "0.0.*", registry = "yn", path = "crates/pi_mesh_builder" }
skybox                  = { version = "0.0.*", registry = "yn", path = "crates/skybox" }
procedural_texture      = { version = "0.0.*", registry = "yn", path = "crates/procedural_texture" }
pi_gltf2_load           = { version = "0.0.*", registry = "yn", path = "crates/gltf2" }
pi_particle_system      = { version = "0.0.*", registry = "yn", path = "crates/particle_system" }
pi_trail_renderer       = { version = "0.0.*", registry = "yn", path = "crates/trail" }
pi_node_materials       = { version = "0.0.*", registry = "yn", path = "crates/node_materials" }
unlit_material          = { version = "0.0.*", registry = "yn", path = "crates/unlit_material" }
pi_standard_material    = { version = "0.0.*", registry = "yn", path = "crates/standard_material" }
pi_pbr                  = { version = "0.0.*", registry = "yn", path = "crates/pbr" }

pi_render               = { version = "0.1", registry = "yn" }
render_utils            = { version = "0.1", registry = "yn" }
render_core             = { version = "0.1", registry = "yn" }
render_derive           = { version = "0.1", registry = "yn" }
render_compile          = { version = "0.1", registry = "yn" }

pi_bevy_render_plugin   = { version = "0.1", registry = "yn" }
pi_bevy_winit_window    = { version = "0.1", registry = "yn" }
pi_bevy_post_process    = { version = "0.1", registry = "yn" }
pi_bevy_ecs_extend      = { version = "0.1", registry = "yn" }
pi_bevy_asset           = { version = "0.1", registry = "yn" }
pi_bevy_log             = { version = "0.1", registry = "yn" }

pi_scene_math           = { version = "0.0.*", registry = "yn" }
pi_animation            = { version = "0.1", registry = "yn" }
pi_curves               = { version = "0.1", registry = "yn" }
pi_atom                 = { version = "0.5", features = ["serde"] }
pi_hal                  = { version = "0.1", registry = "yn" }
pi_assets               = "0.13"
pi-async-rt             = "0.1"
pi_wy_rng               = "0.1"
pi_share                = "0.4"

wgpu                = { version = "0.1", registry = "yn", package = "pi_wgpu" }
bevy_ecs            = "0.11"
# bevy_mod_debugdump  = { version = "0.8" }

log                 = "0.4"

smallvec            = "1.9"
crossbeam           = "0.8"
futures             = "0.3"
bytemuck            = { version = "1.4", features = ["derive"] }
ahash               = "=0.8.6"

[patch.yn]
pi_gltf                 = { path = "../pi_gltf", features = ["extras"] }
pi_render               = { path = "../pi_render" }
render_utils            = { path = "../pi_render/crates/render_utils" }
render_core             = { path = "../pi_render/crates/render_core" }
render_derive           = { path = "../pi_render/crates/render_derive" }
render_compile          = { path = "../pi_render/crates/render_compile" }
pi_bevy_render_plugin   = { path = "../pi_bevy/crates/render" }
pi_bevy_winit_window    = { path = "../pi_bevy/crates/winit_window" }
pi_bevy_ecs_extend      = { path = "../pi_bevy/crates/ecs_extend" }
pi_bevy_asset           = { path = "../pi_bevy/crates/asset" }
pi_bevy_log             = { path = "../pi_bevy/crates/log" }

pi_animation            = { path = "../pi_animation" }

pi_wgpu                 = { path = "../pi_wgpu" }
pi_egl                  = { path = "../pi_egl" }
# winit                   = { path = "../winit" }
# pi_hal                  = { path = "../pi_hal" }
# pi_postprocess          = { path = "../pi_post_process"}

[dev-dependencies]
wgpu            = { version = "0.1", registry = "yn", package = "pi_wgpu", features = ["use_wgpu"] }
pi_winit        = { version = "0.27", registry = "yn", package = "winit" }
rand            = "0.8"
bevy_a11y       = "0.11"
bevy_app        = "0.11"
bevy_window     = "0.11"
pi_gltf         = { path = "../pi_gltf", features = ["extras"] }
env_logger          = "0.9"
# pi_wgpu         = { version = "*", features = ["single_thread", "use_wgpu"] }

[[example]]
name = "cube"
path = "examples/cube/cube.rs"

[[example]]
name = "unlit_cube"
path = "examples/cube/unlit_cube.rs"
# 
# [[example]]
# name = "simple"
# path = "examples/simple/simple.rs"

[[example]]
name = "dispose"
path = "examples/simple/dispose.rs"

[[example]]
name = "instance_enable"
path = "examples/simple/instance_enable.rs"

# 
# [[example]]
# name = "quad"
# path = "examples/quad/quad.rs"
# 
# [[example]]
# name = "skybox"
# path = "examples/skybox/skybox.rs"
# 
# [[example]]
# name = "performance_static_render"
# path = "examples/performance/static_10000.rs"
# 
# [[example]]
# name = "performance_transform_render"
# path = "examples/performance/transform_10000.rs"
# 
# [[example]]
# name = "performance_static_instance"
# path = "examples/performance/static_instance_10000.rs"
# 
# [[example]]
# name = "performance_transform_instance"
# path = "examples/performance/transform_instance_10000.rs"
# 
# [[example]]
# name = "instance_color_tilloff"
# path = "examples/instance/instance_color_tilloff.rs"
# 
# [[example]]
# name = "oct_tree"
# path = "examples/oct_tree/oct_tree.rs"
# 
# [[example]]
# name = "noise"
# path = "examples/ball/ball.rs"
# 
# [[example]]
# name = "cloud"
# path = "examples/procedural_texture/cloud.rs"
# 
# [[example]]
# name = "water"
# path = "examples/procedural_texture/water.rs"
# 
# [[example]]
# name = "brdf"
# path = "examples/procedural_texture/brdf.rs"
# 
# # [[example]]
# # name = "skin"
# # path = "examples/skin/skin.rs"
# 
# [[example]]
# name = "axis"
# path = "examples/axis/axis.rs"

[[example]]
name = "culling_box"
path = "examples/oct_tree/culling_box.rs"

[[example]]
name = "skin_simple"
path = "examples/skeleton/simple.rs"

[[example]]
name = "anime_01"
path = "examples/anime/01.rs"

[[example]]
name = "anime_rotation"
path = "examples/anime/02.rs"
[[example]]
name = "anime_color"
path = "examples/anime/color.rs"

[[example]]
name = "anime_camera"
path = "examples/anime/camera.rs"

[[example]]
name = "anime_rotation_quaternion"
path = "examples/anime/rotation_quaternion.rs"

[[example]]
name = "anime_performance"
path = "examples/anime/performance.rs"

[[example]]
name = "lighting_01"
path = "examples/lighting/01.rs"

[[example]]
name = "lighting_points"
path = "examples/lighting/points.rs"

[[example]]
name = "lighting_spots"
path = "examples/lighting/spots.rs"

# 
# [[example]]
# name = "particle01"
# path = "examples/particles/01.rs"
[[example]]
name = "particle00"
path = "examples/particles/00.rs"
# 
# [[example]]
# name = "particle01"
# path = "examples/particles/01.rs"
# 
# [[example]]
# name = "particle02"
# path = "examples/particles/02.rs"
# 
# [[example]]
# name = "particle03"
# path = "examples/particles/03.rs"

[[example]]
name = "main_opacity"
path = "examples/effects/main_opacity.rs"

[[example]]
name = "opacity_clip"
path = "examples/effects/opacity_clip.rs"

[[example]]
name = "change_texture"
path = "examples/anime/change_texture.rs"

[[example]]
name = "emissive_fresnel"
path = "examples/effects/emissive_fresnel.rs"

[[example]]
name = "main_opacity_fresnel"
path = "examples/effects/main_opacity_fresnel.rs"

[[example]]
name = "two_opacity_mix"
path = "examples/effects/two_opacity_mix.rs"

[[example]]
name = "stripes_virtual"
path = "examples/effects/stripes_virtual.rs"

[[example]]
name = "distortion_uv"
path = "examples/effects/distortion_uv.rs"

[[example]]
name = "anime_opacity_clip"
path = "examples/anime/opacity_clip.rs"

[[example]]
name = "anime_main_opacity"
path = "examples/anime/main_opacity.rs"

[[example]]
name = "gltf_load"
path = "examples/gltf/gltfload.rs"

[[example]]
name = "image_load"
path = "examples/gltf/img_texture_load.rs"

[[example]]
name = "particle_system01"
path = "examples/particles/particle_system01.rs"
[[example]]
name = "particle_system_render_velocity"
path = "examples/particles/render_velocity.rs"
[[example]]
name = "particle_system_shape"
path = "examples/particles/render_shape.rs"
[[example]]
name = "particle_system_stretched"
path = "examples/particles/render_stretched.rs"
[[example]]
name = "particle_system_vertical_billboard"
path = "examples/particles/render_vertical_billboard.rs"

[[example]]
name = "trial01"
path = "examples/trial/01.rs"


[[example]]
name = "ray_test"
path = "examples/oct_tree/ray_test.rs"

[[example]]
name = "pbr_01"
path = "examples/pbr/01.rs"

[[example]]
name = "pbr_env"
path = "examples/pbr/env_01.rs"

[[example]]
name = "pbr_env_image"
path = "examples/pbr/env_02.rs"

[[example]]
name = "camera_opaque_texture"
path = "examples/postprocess/camera_opaque_texture.rs"
[[example]]
name = "camera_depth_texture"
path = "examples/postprocess/camera_depth_texture.rs"

[[example]]
name = "planar_shadow"
path = "examples/lighting/planar_shadow.rs"
