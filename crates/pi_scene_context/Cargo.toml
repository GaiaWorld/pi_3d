[package]
name = "pi_scene_context"
version = "0.0.8"
authors = ["baip0002 <2494156981@qq.com>"]
edition = "2021"
description = "3D Framework for Scene."
repository = "https://github.com/GaiaWorld/pi_3d"
license = "MIT OR Apache-2.0"
keywords = ["3d scene"]

[dependencies]
wgpu            = { version = "0.1", registry = "yn", package = "pi_wgpu" }
log             = "0.4"
smallvec        = "1.9"
crossbeam       = "0.8"
futures         = "0.3"
derive_deref    = "1.1"
serde_derive    = "1.0"

parry3d         = "0.13"
lazy_static     = "1.4"
pi_spatial      = "0.5"


approx          = "0.5"
naga            = { version = "0.19", features = [ "glsl-in" ] }
bytemuck        = { version = "1.4", features = [ "derive" ] }
# bevy_ecs        = "0.11"
# bevy_app        = "0.11"
winit           = { version = "0.27", registry = "yn" }
pollster        = "0.2"
spin_sleep      = "1.1"

pi_map              = "0.2"
pi_slotmap          = "0.1"
pi_hash             = "0.1"
pi_share            = "0.4"
pi_null             = "0.1"
pi_atom             = { version="0.5", features = ["serde"] }

pi_time             = "0.3"
pi_assets           = "0.13"
pi_futures          = "0.1"

pi-async-rt         = "0.1"
pi_slotmap_tree     = "0.3"
pi_hal              = { version = "0.1", registry = "yn" }

pi_render           = { version = "0.1", registry = "yn" }
render_utils        = { version = "0.1", registry = "yn" }
render_derive       = { version = "0.1", registry = "yn" }

pi_bevy_render_plugin   = { version = "0.1", registry = "yn" }
pi_bevy_winit_window    = { version = "0.1", registry = "yn" }
pi_bevy_post_process    = { version = "0.1", registry = "yn" }
pi_bevy_ecs_extend      = { version = "0.1", registry = "yn" }
pi_bevy_asset           = { version = "0.1", registry = "yn" }

pi_scene_math       = { version = "0.0.*", registry = "yn" }
pi_animation        = { version = "0.1", registry = "yn" }
pi_curves           = { version = "0.1", registry = "yn" }

pi_scene_shell      = { version = "0.0.*", registry = "yn", path = "../pi_scene_shell" }
pi_mesh_builder     = { version = "0.0.*", registry = "yn", path = "../pi_mesh_builder" }

[net]
git-fetch-with-cli = true
offline = true
